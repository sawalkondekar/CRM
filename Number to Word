// sample code, still some error for paisa..not error mismtaching values..
vals = 60.44;
val_s = vals.toLong();
info val_s;
th = {"","Thousand","Million","Billion","Trillion"};
dg = {"Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"};
tn = {"Ten","Eleven","Twelve","Thirteen","Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"};
tw = {"Twenty","Thirty","Forty","Fifty","Sixty","Seventy","Eighty","Ninety"};
syz = val_s.length();
if(syz < 15)
{
	syz = val_s.length();
	s = val_s.replaceAll("(?)",",",false).removeFirstOccurence(",").removeLastOccurence(",").toList();
	//info s;
	str = "";
	sk = 1;
	bypass = false;
	val_s = val_s.tolong();
	for each index i in s
	{
		cur = s.get(i).toLong();
		if(!bypass)
		{
			if((syz - i) % 3 == 2)
			{
				if(cur == 1)
				{
					next = s.get(i + 1).toLong();
					str = str + tn.get(next) + " ";
					bypass = true;
					sk = 1;
				}
				else if(cur != 0)
				{
					str = str + tw.get(cur - 2) + " ";
					sk = 1;
				}
			}
			else if(cur != 0)
			{
				str = str + dg.get(cur) + " ";
				if((syz - i) % 3 == 0)
				{
					str = str + "Hundred ";
					sk = 1;
				}
			}
		}
		else
		{
			bypass = false;
		}
		if((syz - i) % 3 == 1)
		{
			if(sk != 0)
			{
				str = str + th.get(floor((syz - i - 1) / 3)) + " ";
				sk = 0;
			}
		}
	}
	out = str;
}
else
{
	hunds = val_s.subString(syz - 3,syz);
	s1 = hunds.replaceAll("(?)",",",false).removeFirstOccurence(",").removeLastOccurence(",").toList();
	str1 = "";
	sk1 = 1;
	x1 = hunds.length();
	bypass1 = false;
	for each index i in s1
	{
		cur1 = s1.get(i).toLong();
		if(!bypass1)
		{
			if((x1 - i) % 3 == 2)
			{
				if(cur1 == 1)
				{
					next1 = s1.get(i + 1).toLong();
					str1 = str1 + tn.get(next1) + " ";
					bypass1 = true;
					sk1 = 1;
				}
				else if(cur1 != 0)
				{
					str1 = str1 + tw.get(cur1 - 2) + " ";
					sk1 = 1;
				}
			}
			else if(cur1 != 0)
			{
				str1 = str1 + dg.get(cur1) + " ";
				if((x1 - i) % 3 == 0)
				{
					str1 = str1 + "Hundred ";
					sk1 = 1;
				}
			}
		}
		else
		{
			bypass1 = false;
		}
		if((x1 - i) % 3 == 1)
		{
			if(sk1 != 0)
			{
				str1 = str1 + th.get(floor((x1 - i - 1) / 3)) + " ";
				sk1 = 0;
			}
		}
	}
	HundWords = str1;
	thous = val_s.subString(syz - 5,syz - 3);
	x2 = thous.length();
	s2 = thous.replaceAll("(?)",",",false).removeFirstOccurence(",").removeLastOccurence(",").toList();
	str2 = "";
	sk2 = 1;
	bypass2 = false;
	for each index i in s2
	{
		cur2 = s2.get(i).toLong();
		if(!bypass2)
		{
			if((x2 - i) % 3 == 2)
			{
				if(cur2 == 1)
				{
					next2 = s2.get(i + 1).toLong();
					str2 = str2 + tn.get(next2) + " ";
					bypass2 = true;
					sk2 = 1;
				}
				else if(cur2 != 0)
				{
					str2 = str2 + tw.get(cur2 - 2) + " ";
					sk2 = 1;
				}
			}
			else if(cur2 != 0)
			{
				str2 = str2 + dg.get(cur2) + " ";
				if((x2 - i) % 3 == 0)
				{
					str2 = str2 + "Hundred ";
					sk2 = 1;
				}
			}
		}
		else
		{
			bypass2 = false;
		}
		if((x2 - i) % 3 == 1)
		{
			if(sk2 != 0)
			{
				str2 = str2 + th.get(floor((x2 - i - 1) / 3)) + " ";
				sk2 = 0;
			}
		}
	}
	ThousWords = str2;
	out = ThousWords + "Thousand " + HundWords;
	//info thous;
	n = syz - 7;
	if(n > 0)
	{
		lakhs = val_s.subString(n,syz - 5);
		s3 = lakhs.replaceAll("(?)",",",false).removeFirstOccurence(",").removeLastOccurence(",").toList();
		str3 = "";
		sk3 = 1;
		x3 = lakhs.length();
		bypass3 = false;
		for each index i in s3
		{
			cur3 = s3.get(i).toLong();
			if(!bypass3)
			{
				if((x3 - i) % 3 == 2)
				{
					if(cur3 == 1)
					{
						next3 = s3.get(i + 1).toLong();
						str3 = str3 + tn.get(next3) + " ";
						bypass3 = true;
						sk3 = 1;
					}
					else if(cur3 != 0)
					{
						str3 = str3 + tw.get(cur3 - 2) + " ";
						sk3 = 1;
					}
				}
				else if(cur3 != 0)
				{
					str3 = str3 + dg.get(cur3) + " ";
					if((x3 - i) % 3 == 0)
					{
						str3 = str3 + "Hundred ";
						sk3 = 1;
					}
				}
			}
			else
			{
				bypass3 = false;
			}
			if((x3 - i) % 3 == 1)
			{
				if(sk3 != 0)
				{
					str3 = str3 + th.get(floor((x3 - i - 1) / 3)) + " ";
					sk3 = 0;
				}
			}
		}
		LakhWords = str3;
		out = LakhWords + "Hundred Thousand " + out;
		n = syz - 9;
		if(syz >= 8)
		{
			if(n > 0)
			{
				crores = val_s.subString(n,syz - 7);
				s4 = crores.replaceAll("(?)",",",false).removeFirstOccurence(",").removeLastOccurence(",").toList();
				str4 = "";
				x4 = crores.length();
				sk4 = 1;
				bypass4 = false;
				for each index i in s4
				{
					cur4 = s4.get(i).toLong();
					if(!bypass4)
					{
						if((x4 - i) % 3 == 2)
						{
							if(cur4 == 1)
							{
								next4 = s4.get(i + 1).toLong();
								str4 = str4 + tn.get(next4) + " ";
								bypass4 = true;
								sk4 = 1;
							}
							else if(cur4 != 0)
							{
								str4 = str4 + tw.get(cur4 - 2) + " ";
								sk4 = 1;
							}
						}
						else if(cur4 != 0)
						{
							str4 = str4 + dg.get(cur4) + " ";
							if((x4 - i) % 3 == 0)
							{
								str4 = str4 + "Hundred ";
								sk4 = 1;
							}
						}
					}
					else
					{
						bypass4 = false;
					}
					if((x4 - i) % 3 == 1)
					{
						if(sk4 != 0)
						{
							str4 = str4 + th.get(floor((x4 - i - 1) / 3)) + " ";
							sk4 = 0;
						}
					}
				}
				CroreWords = str4;
				out = CroreWords + "Crores " + out;
			}
			else
			{
				crores = val_s.subString(0,syz - 7);
				s4 = crores.replaceAll("(?)",",",false).removeFirstOccurence(",").removeLastOccurence(",").toList();
				str4 = "";
				sk4 = 1;
				x4 = crores.length();
				bypass4 = false;
				for each index i in s4
				{
					cur4 = s4.get(i).toLong();
					if(!bypass4)
					{
						if((x4 - i) % 3 == 2)
						{
							if(cur4 == 1)
							{
								next4 = s4.get(i + 1).toLong();
								str4 = str4 + tn.get(next4) + " ";
								bypass4 = true;
								sk4 = 1;
							}
							else if(cur4 != 0)
							{
								str4 = str4 + tw.get(cur4 - 2) + " ";
								sk4 = 1;
							}
						}
						else if(cur4 != 0)
						{
							str4 = str4 + dg.get(cur4) + " ";
							if((x4 - i) % 3 == 0)
							{
								str4 = str4 + "Hundred ";
								sk4 = 1;
							}
						}
					}
					else
					{
						bypass4 = false;
					}
					if((x4 - i) % 3 == 1)
					{
						if(sk4 != 0)
						{
							str4 = str4 + th.get(floor((x4 - i - 1) / 3)) + " ";
							sk4 = 0;
						}
					}
				}
				CroreWords = str4;
				out = CroreWords + "Crore " + out;
			}
		}
	}
	else
	{
		lakhs = val_s.subString(0,syz - 5);
		s5 = lakhs.replaceAll("(?)",",",false).removeFirstOccurence(",").removeLastOccurence(",").toList();
		str5 = "";
		sk5 = 1;
		x5 = lakhs.length();
		bypass5 = false;
		for each index i in s5
		{
			cur5 = s5.get(i).toLong();
			if(!bypass5)
			{
				if((x5 - i) % 3 == 2)
				{
					if(cur5 == 1)
					{
						next5 = s5.get(i + 1).toLong();
						str5 = str5 + tn.get(next5) + " ";
						bypass5 = true;
						sk5 = 1;
					}
					else if(cur5 != 0)
					{
						str5 = str5 + tw.get(cur5 - 2) + " ";
						sk5 = 1;
					}
				}
				else if(cur5 != 0)
				{
					str5 = str5 + dg.get(cur5) + " ";
					if((x5 - i) % 3 == 0)
					{
						str5 = str5 + "Hundred ";
						sk5 = 1;
					}
				}
			}
			else
			{
				bypass5 = false;
			}
			if((x5 - i) % 3 == 1)
			{
				if(sk5 != 0)
				{
					str5 = str5 + th.get(floor((x5 - i - 1) / 3)) + " ";
					sk5 = 0;
				}
			}
		}
		LakhWords = str5;
		out = LakhWords + "Lakh " + out;
	}
}
if(out.contains("Hundred"))
{
	if(out.toList(" ").get(out.toList(" ").size() - 1) == "Hundred")
	{
		newvalue = out;
	}
	else
	{
		newvalue = out.getPrefix("Hundred") + "Hundred" + out.getSuffix("Hundred");
	}
}
else
{
	newvalue = out;
}
info newvalue;
if(vals.contains("."))
{
	val_s1 = vals.toString().getSuffix(".");
	if(val_s1.length() < 2)
	{
		val_s1 = val_s1 + 0;
	}
	else
	{
		val_s1 = vals.toString().getSuffix(".").subString(0,2);
	}
	info val_s1;
	if(val_s1.toLong() > 0)
	{
		th = {"","thousand","million","milliard","billion"};
		dg = {"zero","one","two","three","four","five","six","seven","eight","nine"};
		tn = {"ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"};
		tw = {"twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"};
		x = val_s1.length();
		if(x > 15)
		{
			info "too big";
		}
		else
		{
			s = val_s1.replaceAll("(?)",",",false).removeFirstOccurence(",").removeLastOccurence(",").toList();
			str1 = "";
			sk = 1;
			bypass = false;
			for each index i in s
			{
				cur = s.get(i).toLong();
				if(!bypass)
				{
					if((x - i) % 3 == 2)
					{
						if(cur == 1)
						{
							next = s.get(i + 1).toLong();
							str1 = str1 + tn.get(next) + " ";
							bypass = true;
							sk = 1;
						}
						else if(cur != 0)
						{
							str1 = str1 + tw.get(cur - 2) + " ";
							sk = 1;
						}
					}
					else if(cur != 0)
					{
						str1 = str1 + dg.get(cur) + " ";
						if((x - i) % 3 == 0)
						{
							str1 = str1 + "hundred and ";
							sk = 1;
						}
					}
				}
				else
				{
					bypass = false;
				}
				if((x - i) % 3 == 1)
				{
					if(sk != 0)
					{
						str1 = str1 + th.get(floor((x - i - 1) / 3)) + " ";
						sk = 0;
					}
				}
			}
		}
	}
	else
	{
		str1 = "";
	}
}
if(str1 == "" || str1 == null)
{
		word = newvalue.trim() + " dollars Only";
}
else
{
		word = newvalue.trim() + "  dollars AND " + str1.trim() + " cents Only";
}
mp = Map();
mp.put("Total_Amount",word);
info mp;
